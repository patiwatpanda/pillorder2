basePath: /api/v1
definitions:
  ent.Dentist:
    properties:
      Dentist_name:
        description: DentistName holds the value of the "Dentist_name" field.
        type: string
      edges:
        $ref: '#/definitions/ent.DentistEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the DentistQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.DentistEdges:
    properties:
      pillorders:
        description: Pillorders holds the value of the pillorders edge.
        items:
          $ref: '#/definitions/ent.Pillorder'
        type: array
    type: object
  ent.Employee:
    properties:
      edges:
        $ref: '#/definitions/ent.EmployeeEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the EmployeeQuery when eager-loading is set.
        type: object
      employee_email:
        description: EmployeeEmail holds the value of the "employee_email" field.
        type: string
      employee_name:
        description: EmployeeName holds the value of the "employee_name" field.
        type: string
      employee_password:
        description: EmployeePassword holds the value of the "employee_password" field.
        type: string
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.EmployeeEdges:
    properties:
      pillorders:
        description: Pillorders holds the value of the pillorders edge.
        items:
          $ref: '#/definitions/ent.Pillorder'
        type: array
    type: object
  ent.Patient:
    properties:
      Patient_age:
        description: PatientAge holds the value of the "Patient_age" field.
        type: integer
      Patient_name:
        description: PatientName holds the value of the "Patient_name" field.
        type: string
      edges:
        $ref: '#/definitions/ent.PatientEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the PatientQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.PatientEdges:
    properties:
      pillorders:
        description: Pillorders holds the value of the pillorders edge.
        items:
          $ref: '#/definitions/ent.Pillorder'
        type: array
    type: object
  ent.Pillorder:
    properties:
      PillorderDate:
        description: PillorderDate holds the value of the "PillorderDate" field.
        type: string
      PillorderNameID:
        description: PillorderNameID holds the value of the "PillorderNameID" field.
        type: string
      edges:
        $ref: '#/definitions/ent.PillorderEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the PillorderQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.PillorderEdges:
    properties:
      dentist:
        $ref: '#/definitions/ent.Dentist'
        description: Dentist holds the value of the dentist edge.
        type: object
      employee:
        $ref: '#/definitions/ent.Employee'
        description: Employee holds the value of the employee edge.
        type: object
      patient:
        $ref: '#/definitions/ent.Patient'
        description: Patient holds the value of the patient edge.
        type: object
      pillorderitem:
        $ref: '#/definitions/ent.PillorderItem'
        description: Pillorderitem holds the value of the pillorderitem edge.
        type: object
    type: object
  ent.PillorderItem:
    properties:
      PillorderItem_name:
        description: PillorderItemName holds the value of the "PillorderItem_name" field.
        type: string
      edges:
        $ref: '#/definitions/ent.PillorderItemEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the PillorderItemQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.PillorderItemEdges:
    properties:
      pillorders:
        description: Pillorders holds the value of the pillorders edge.
        items:
          $ref: '#/definitions/ent.Pillorder'
        type: array
    type: object
  gin.H:
    additionalProperties: true
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server for SUT SE 2563
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: SUT SA Example API Playlist Vidoe
  version: "1.0"
paths:
  /dentists:
    get:
      description: list dentist entities
      operationId: list-dentist
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Dentist'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List dentist entities
    post:
      consumes:
      - application/json
      description: Create dentist
      operationId: create-dentist
      parameters:
      - description: Dentist entity
        in: body
        name: dentist
        required: true
        schema:
          $ref: '#/definitions/ent.Dentist'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Dentist'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create dentist
  /dentists/{id}:
    get:
      description: get dentist by ID
      operationId: get-dentist
      parameters:
      - description: Dentist ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Dentist'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a dentist entity by ID
  /employees:
    get:
      description: list employee entities
      operationId: list-employee
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Employee'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List employee entities
    post:
      consumes:
      - application/json
      description: Create employee
      operationId: create-employee
      parameters:
      - description: ' Employee entity'
        in: body
        name: employee
        required: true
        schema:
          $ref: '#/definitions/ent.Employee'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Employee'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create employee
  /employees/{id}:
    get:
      description: get employee by ID
      operationId: get-employee
      parameters:
      - description: Employee ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Employee'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a Employee entity by ID
  /patients:
    get:
      description: list patient entities
      operationId: list-patient
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Patient'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List patient entities
    post:
      consumes:
      - application/json
      description: Create patient
      operationId: create-patient
      parameters:
      - description: Patient entity
        in: body
        name: patient
        required: true
        schema:
          $ref: '#/definitions/ent.Patient'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Patient'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create patient
  /patients/{id}:
    get:
      description: get patient by ID
      operationId: get-patient
      parameters:
      - description: Patient ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Patient'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a patient entity by ID
  /pillorderItems:
    post:
      consumes:
      - application/json
      description: Create pillorderitem
      operationId: create-pillorderitem
      parameters:
      - description: PillorderItem entity
        in: body
        name: pillorderitem
        required: true
        schema:
          $ref: '#/definitions/ent.PillorderItem'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.PillorderItem'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create pillorderitem
  /pillorderitems:
    get:
      description: list pillorderitem entities
      operationId: list-pillorderitem
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.PillorderItem'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List pillorderitem entities
  /pillorderitems/{id}:
    get:
      description: get PillorderItem by ID
      operationId: get-pillorderitem
      parameters:
      - description: PillorderItem ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.PillorderItem'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a PillorderItem entity by ID
  /pillorders:
    get:
      description: list pillorder entities
      operationId: list-pillorder
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Pillorder'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List pillorder entities
    post:
      consumes:
      - application/json
      description: Create pillorder
      operationId: create-pillorder
      parameters:
      - description: Pillorder entity
        in: body
        name: pillorder
        required: true
        schema:
          $ref: '#/definitions/ent.Pillorder'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Pillorder'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create pillorder
  /pillorders/{id}:
    get:
      description: get pillorder by ID
      operationId: get-pillorder
      parameters:
      - description: Pillorder ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Pillorder'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a Pillorder entity by ID
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
  BasicAuth:
    type: basic
  OAuth2AccessCode:
    authorizationUrl: https://example.com/oauth/authorize
    flow: accessCode
    scopes:
      admin: ' Grants read and write access to administrative information'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
  OAuth2Application:
    flow: application
    scopes:
      admin: ' Grants read and write access to administrative information'
      write: ' Grants write access'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
  OAuth2Implicit:
    authorizationUrl: https://example.com/oauth/authorize
    flow: implicit
    scopes:
      admin: ' Grants read and write access to administrative information'
      write: ' Grants write access'
    type: oauth2
  OAuth2Password:
    flow: password
    scopes:
      admin: ' Grants read and write access to administrative information'
      read: ' Grants read access'
      write: ' Grants write access'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
swagger: "2.0"
